#!/usr/bin/env python3
"""
–§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ - –° –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ü–ê–†–ê–ú–ï–¢–†–ê–ú–ò –ò–ó –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò
"""
import requests
import os
import sys
from dotenv import load_dotenv

load_dotenv()

KASPI_TOKEN = os.getenv('KASPI_TOKEN')

print("=" * 80)
print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ KASPI API")
print("=" * 80)
print(f"\nüìÖ –î–∞—Ç–∞: 8 –æ–∫—Ç—è–±—Ä—è 2025")
print(f"üîë –¢–æ–∫–µ–Ω: {KASPI_TOKEN[:30]}..." if KASPI_TOKEN else "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")

if not KASPI_TOKEN:
    print("\n‚ùå –û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
    sys.exit(1)

# ===== –ü–†–ê–í–ò–õ–¨–ù–´–ô –§–û–†–ú–ê–¢ –ò–ó –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò =====
headers = {
    'Content-Type': 'application/vnd.api+json',
    'X-Auth-Token': KASPI_TOKEN
}

# –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã!
params = {
    'page[number]': 0,
    'page[size]': 20
}

url = "https://kaspi.kz/shop/api/v2/orders"

print(f"\nüì° –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å...")
print(f"   URL: {url}")
print(f"   Headers: Content-Type, X-Auth-Token")
print(f"   Params: page[number]=0, page[size]=20")
print(f"\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ (—Ç–∞–π–º–∞—É—Ç 30 —Å–µ–∫)...\n")

try:
    response = requests.get(url, headers=headers, params=params, timeout=30)
    
    status = response.status_code
    
    print("=" * 80)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢: HTTP {status}")
    print("=" * 80)
    
    if status == 200:
        print("\nüéâüéâüéâ –£–°–ü–ï–•! API –†–ê–ë–û–¢–ê–ï–¢! üéâüéâüéâ")
        print("\n‚úÖ –¢–æ–∫–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
        print("‚úÖ API –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
        print("‚úÖ –ó–∞–ø—Ä–æ—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
        
        try:
            data = response.json()
            total_count = data.get('meta', {}).get('totalCount', 0)
            page_count = data.get('meta', {}).get('pageCount', 0)
            orders = data.get('data', [])
            
            print(f"\nüì¶ –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            print(f"   –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {total_count}")
            print(f"   –°—Ç—Ä–∞–Ω–∏—Ü: {page_count}")
            print(f"   –ù–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(orders)}")
            
            if orders:
                print(f"\nüìã –ü–ï–†–í–´–ô –ó–ê–ö–ê–ó:")
                first_order = orders[0]
                attrs = first_order.get('attributes', {})
                print(f"   ID: {first_order.get('id')}")
                print(f"   –ö–æ–¥: {attrs.get('code')}")
                print(f"   –°—É–º–º–∞: {attrs.get('totalPrice')} ‚Ç∏")
                print(f"   –°—Ç–∞—Ç—É—Å: {attrs.get('status')}")
                print(f"   –°–æ—Å—Ç–æ—è–Ω–∏–µ: {attrs.get('state')}")
            
        except Exception as e:
            print(f"\nüìÑ –û—Ç–≤–µ—Ç (—Ç–µ–∫—Å—Ç): {response.text[:500]}")
        
        print("\n" + "=" * 80)
        print("‚úÖ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
        print("=" * 80)
        print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python Script.py")
        print("   2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É: python kaspi_auto_uploader.py")
        
    elif status == 400:
        print("\n‚ö†Ô∏è HTTP 400 - BAD REQUEST")
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∑–∞–ø—Ä–æ—Å–∞")
        try:
            error = response.json()
            print(f"\nüìÑ –û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
            print(f"   {error}")
        except:
            print(f"\nüìÑ –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:")
            print(f"   {response.text[:500]}")
        
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   ‚Ä¢ –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
        print("   ‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON")
        print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é")
        
    elif status == 401:
        print("\nüîê HTTP 401 - UNAUTHORIZED")
        print("\n‚ùå –¢–æ–∫–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –∏—Å—Ç—ë–∫")
        print(f"\nüìÑ –û—Ç–≤–µ—Ç: {response.text[:500]}")
        print("\nüí° –†–µ—à–µ–Ω–∏–µ:")
        print("   1. –ó–∞–π–¥–∏—Ç–µ: https://kaspi.kz/merchantcabinet/")
        print("   2. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –¢–æ–∫–µ–Ω API")
        print("   3. –°—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω")
        print("   4. –û–±–Ω–æ–≤–∏—Ç–µ —Ñ–∞–π–ª .env")
        
    elif status == 403:
        print("\nüö´ HTTP 403 - FORBIDDEN")
        print("\n‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ API")
        print(f"\nüìÑ –û—Ç–≤–µ—Ç: {response.text[:500]}")
        print("\nüí° –†–µ—à–µ–Ω–∏–µ:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫—Ç–∏–≤–∞—Ü–∏—é API –≤ –∫–∞–±–∏–Ω–µ—Ç–µ")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –¥–ª—è Shop API")
        print("   3. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ: 2323")
        
    else:
        print(f"\n‚ö†Ô∏è –ù–ï–û–ñ–ò–î–ê–ù–ù–´–ô –ö–û–î: {status}")
        print(f"\nüìÑ –û—Ç–≤–µ—Ç: {response.text[:500]}")

except requests.Timeout:
    print("=" * 80)
    print("‚è∞ TIMEOUT - –°–ï–†–í–ï–† –ù–ï –û–¢–í–ï–¢–ò–õ")
    print("=" * 80)
    print("\n‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥")
    print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
    print("   1. API –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ –∫–∞–±–∏–Ω–µ—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞")
    print("   2. –¢–æ–∫–µ–Ω –¥–ª—è –¥—Ä—É–≥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ (–Ω–µ Shop API)")
    print("   3. IP-–∞–¥—Ä–µ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
    print("\nüìû –†–µ—à–µ–Ω–∏–µ: –ü–æ–∑–≤–æ–Ω–∏—Ç–µ 2323")

except requests.ConnectionError:
    print("\n‚ùå –û–®–ò–ë–ö–ê –°–û–ï–î–ò–ù–ï–ù–ò–Ø")
    print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")

except Exception as e:
    print(f"\n‚ùå –ù–ï–ü–†–ï–î–í–ò–î–ï–ù–ù–ê–Ø –û–®–ò–ë–ö–ê")
    print(f"   –¢–∏–ø: {type(e).__name__}")
    print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {str(e)[:500]}")

print("\n" + "=" * 80)
print("üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: KASPI_API_–ü–û–õ–ù–ê–Ø_–î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø_V2.md")
print("=" * 80)
