#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ç–æ–∫–µ–Ω–∞ –Ω–∞ –†–ê–ó–ù–´–• endpoint'–∞—Ö Kaspi
–ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –¥–ª—è —á–µ–≥–æ —Ç–æ–∫–µ–Ω –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω
"""
import requests
import os
from dotenv import load_dotenv

load_dotenv()

print("=" * 70)
print("üîç –ü–†–û–í–ï–†–ö–ê –¢–û–ö–ï–ù–ê –ù–ê –†–ê–ó–ù–´–• ENDPOINT'–ê–•")
print("=" * 70)

KASPI_TOKEN = os.getenv('KASPI_TOKEN')
print(f"\nüîë –¢–æ–∫–µ–Ω: {KASPI_TOKEN[:25]}..." if KASPI_TOKEN else "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")

# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
HEADERS = {
    'Content-Type': 'application/vnd.api+json',
    'X-Auth-Token': KASPI_TOKEN
}

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–º–æ–∂–µ—Ç —Ç–æ–∫–µ–Ω –¥–ª—è –¥—Ä—É–≥–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞?)
HEADERS_ALT1 = {
    'Content-Type': 'application/json',
    'Authorization': f'Bearer {KASPI_TOKEN}'
}

HEADERS_ALT2 = {
    'Content-Type': 'application/json',
    'X-Auth-Token': KASPI_TOKEN
}

HEADERS_ALT3 = {
    'Authorization': f'Token {KASPI_TOKEN}'
}

# –°–ø–∏—Å–æ–∫ endpoint'–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
ENDPOINTS = [
    {
        "name": "Orders API (–æ—Å–Ω–æ–≤–Ω–æ–π)",
        "url": "https://kaspi.kz/shop/api/v2/orders",
        "headers": HEADERS,
        "params": {"page[size]": 1}
    },
    {
        "name": "Orders API (–±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤)",
        "url": "https://kaspi.kz/shop/api/v2/orders",
        "headers": HEADERS,
        "params": {}
    },
    {
        "name": "Products API",
        "url": "https://kaspi.kz/shop/api/v2/products",
        "headers": HEADERS,
        "params": {"page[size]": 1}
    },
    {
        "name": "Merchant API (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)",
        "url": "https://merchant.kaspi.kz/api/v2/orders",
        "headers": HEADERS,
        "params": {"page[size]": 1}
    },
    {
        "name": "API –±–µ–∑ /shop",
        "url": "https://kaspi.kz/api/v2/orders",
        "headers": HEADERS,
        "params": {"page[size]": 1}
    },
    {
        "name": "Orders —Å Bearer token",
        "url": "https://kaspi.kz/shop/api/v2/orders",
        "headers": HEADERS_ALT1,
        "params": {"page[size]": 1}
    },
    {
        "name": "Orders —Å JSON content-type",
        "url": "https://kaspi.kz/shop/api/v2/orders",
        "headers": HEADERS_ALT2,
        "params": {"page[size]": 1}
    },
    {
        "name": "Orders —Å Token prefix",
        "url": "https://kaspi.kz/shop/api/v2/orders",
        "headers": HEADERS_ALT3,
        "params": {"page[size]": 1}
    },
]

print("\n" + "=" * 70)
print("üì° –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ENDPOINT'–û–í")
print("=" * 70)

success_count = 0
timeout_count = 0
error_count = 0

for i, endpoint in enumerate(ENDPOINTS, 1):
    print(f"\n[{i}/{len(ENDPOINTS)}] {endpoint['name']}")
    print(f"   URL: {endpoint['url']}")
    print(f"   –ó–∞–≥–æ–ª–æ–≤–∫–∏: {list(endpoint['headers'].keys())}")
    
    try:
        response = requests.get(
            endpoint['url'],
            headers=endpoint['headers'],
            params=endpoint.get('params', {}),
            timeout=8
        )
        
        status = response.status_code
        print(f"   ‚úÖ –û—Ç–≤–µ—Ç: HTTP {status}")
        
        if status == 200:
            print(f"   üéâ –†–ê–ë–û–¢–ê–ï–¢! –¢–æ–∫–µ–Ω –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —ç—Ç–æ–≥–æ endpoint'–∞!")
            try:
                data = response.json()
                print(f"   üì¶ –î–∞–Ω–Ω—ã–µ: {str(data)[:100]}...")
            except:
                print(f"   üìÑ –¢–µ–∫—Å—Ç: {response.text[:100]}...")
            success_count += 1
            
        elif status == 401:
            print(f"   üîê 401 Unauthorized - —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç")
            error_count += 1
            
        elif status == 403:
            print(f"   üö´ 403 Forbidden - –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
            error_count += 1
            
        elif status == 404:
            print(f"   ‚ùì 404 Not Found - endpoint –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            error_count += 1
            
        elif status == 400:
            print(f"   ‚ö†Ô∏è 400 Bad Request - –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
            try:
                err = response.json()
                print(f"   üìÑ –û—à–∏–±–∫–∞: {str(err)[:100]}...")
            except:
                print(f"   üìÑ –¢–µ–∫—Å—Ç: {response.text[:100]}...")
            error_count += 1
            
        else:
            print(f"   ‚ö†Ô∏è –ù–µ–æ–±—ã—á–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {status}")
            error_count += 1
            
    except requests.exceptions.Timeout:
        print(f"   ‚è∞ TIMEOUT - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –∑–∞ 8 —Å–µ–∫—É–Ω–¥")
        timeout_count += 1
        
    except requests.exceptions.ConnectionError:
        print(f"   ‚ùå CONNECTION ERROR - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")
        error_count += 1
        
    except Exception as e:
        print(f"   ‚ùå –û–®–ò–ë–ö–ê: {type(e).__name__}")
        error_count += 1

# –ò—Ç–æ–≥–∏
print("\n" + "=" * 70)
print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´")
print("=" * 70)

print(f"\n‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ (200): {success_count}")
print(f"‚è∞ Timeout'–æ–≤: {timeout_count}")
print(f"‚ùå –û—à–∏–±–æ–∫ (401/403/404/400): {error_count}")

if success_count > 0:
    print("\nüéâ –û–¢–õ–ò–ß–ù–û! –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö endpoint'–∞—Ö!")
    print("   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ endpoint'—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤–µ—Ä–Ω—É–ª–∏ 200.")
    
elif timeout_count == len(ENDPOINTS):
    print("\n‚ö†Ô∏è –í–°–ï ENDPOINT'–´ –î–ê–Æ–¢ TIMEOUT")
    print("\nüí° –≠–¢–û –ó–ù–ê–ß–ò–¢:")
    print("   1. –¢–æ–∫–µ–Ω –≤–æ–æ–±—â–µ –Ω–µ –¥–ª—è API (–≤–æ–∑–º–æ–∂–Ω–æ –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)")
    print("   2. API –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
    print("   3. –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω")
    print("\nüìã –ß–¢–û –î–ï–õ–ê–¢–¨:")
    print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí API")
    print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–µ—Ä—ë—Ç–µ —Ç–æ–∫–µ–Ω –∏–º–µ–Ω–Ω–æ –¥–ª—è API")
    print("   3. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ: 2323")
    
elif error_count > 0:
    print("\n‚ö†Ô∏è –¢–û–ö–ï–ù –ù–ï –†–ê–ë–û–¢–ê–ï–¢ –ù–ê –≠–¢–ò–• ENDPOINT'–ê–•")
    print("\nüí° –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:")
    print("   1. –¢–æ–∫–µ–Ω –¥–ª—è –¥—Ä—É–≥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ Kaspi (–Ω–µ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞)")
    print("   2. –¢–æ–∫–µ–Ω –∏—Å—Ç—ë–∫")
    print("   3. –ù–µ–≤–µ—Ä–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")
    print("\nüìã –ß–¢–û –î–ï–õ–ê–¢–¨:")
    print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–æ–∫–µ–Ω –¥–ª—è '–ú–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞ Kaspi.kz'")
    print("   2. –ù–µ –ø—É—Ç–∞–π—Ç–µ —Å —Ç–æ–∫–µ–Ω–∞–º–∏ –¥–ª—è:")
    print("      - Kaspi Pay")
    print("      - Kaspi QR")
    print("      - Kaspi –û–±—ä—è–≤–ª–µ–Ω–∏—è")
    print("   3. –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª–µ API")

print("\n" + "=" * 70)
print("üí° –°–û–í–ï–¢:")
print("=" * 70)
print("""
–í –∫–∞–±–∏–Ω–µ—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞ (https://kaspi.kz/merchantcabinet/) –º–æ–≥—É—Ç –±—ã—Ç—å
–†–ê–ó–ù–´–ï —Ç–æ–∫–µ–Ω—ã –¥–ª—è –†–ê–ó–ù–´–• —Å–µ—Ä–≤–∏—Å–æ–≤:

1. –¢–æ–∫–µ–Ω –¥–ª—è –ú–∞–≥–∞–∑–∏–Ω–∞ (Shop API) - –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –∏ —Ç–æ–≤–∞—Ä–æ–≤
2. –¢–æ–∫–µ–Ω –¥–ª—è Kaspi Pay - –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π
3. –¢–æ–∫–µ–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ (XML API) - –¥–ª—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤

–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Ç–æ–∫–µ–Ω –ò–ú–ï–ù–ù–û –¥–ª—è Shop API!
""")
print("=" * 70)
