#!/usr/bin/env python3
"""
–ü–†–û–î–í–ò–ù–£–¢–ê–Ø –ü–†–û–í–ï–†–ö–ê –¢–û–ö–ï–ù–ê KASPI
–ü—Ä–æ–±—É–µ–º –í–°–ï –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
"""
import requests
import os
import base64
from dotenv import load_dotenv

load_dotenv()

KASPI_TOKEN = os.getenv('KASPI_TOKEN')

print("=" * 80)
print("üî¨ –ü–†–û–î–í–ò–ù–£–¢–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–û–ö–ï–ù–ê KASPI")
print("=" * 80)
print(f"\nüîë –¢–æ–∫–µ–Ω: {KASPI_TOKEN[:30]}..." if KASPI_TOKEN else "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")

# –í–ê–†–ò–ê–ù–¢–´ 1: –†–∞–∑–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ API
print("\n" + "=" * 80)
print("üìç –¢–ï–°–¢ 1: –†–ê–ó–ù–´–ï –í–ï–†–°–ò–ò API")
print("=" * 80)

api_versions = [
    ("v2 (—Ç–µ–∫—É—â–∞—è)", "https://kaspi.kz/shop/api/v2/orders", {"X-Auth-Token": KASPI_TOKEN}),
    ("v1 (—Å—Ç–∞—Ä–∞—è)", "https://kaspi.kz/shop/api/v1/orders", {"X-Auth-Token": KASPI_TOKEN}),
    ("–±–µ–∑ –≤–µ—Ä—Å–∏–∏", "https://kaspi.kz/shop/api/orders", {"X-Auth-Token": KASPI_TOKEN}),
]

for name, url, headers in api_versions:
    print(f"\nüîπ {name}: {url}")
    try:
        r = requests.get(url, headers=headers, timeout=3)
        print(f"   ‚úÖ HTTP {r.status_code}")
        if r.status_code != 404:
            print(f"   üìÑ {r.text[:150]}")
    except requests.Timeout:
        print(f"   ‚è∞ TIMEOUT")
    except Exception as e:
        print(f"   ‚ùå {type(e).__name__}")

# –í–ê–†–ò–ê–ù–¢ 2: –†–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (–ò–ó –û–§–ò–¶–ò–ê–õ–¨–ù–û–ô –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò)
print("\n" + "=" * 80)
print("üìç –¢–ï–°–¢ 2: –§–û–†–ú–ê–¢–´ –ó–ê–ì–û–õ–û–í–ö–û–í –ò–ó –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò")
print("=" * 80)

header_variants = [
    ("–°—Ç–∞–Ω–¥–∞—Ä—Ç vnd.api+json", {
        "Content-Type": "application/vnd.api+json",
        "X-Auth-Token": KASPI_TOKEN
    }),
    ("–¢–æ–ª—å–∫–æ X-Auth-Token", {
        "X-Auth-Token": KASPI_TOKEN
    }),
    ("–° Accept –∑–∞–≥–æ–ª–æ–≤–∫–æ–º", {
        "Accept": "application/vnd.api+json",
        "X-Auth-Token": KASPI_TOKEN
    }),
    ("–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä", {
        "Content-Type": "application/vnd.api+json",
        "Accept": "application/vnd.api+json",
        "X-Auth-Token": KASPI_TOKEN
    }),
]

url = "https://kaspi.kz/shop/api/v2/orders"
for name, headers in header_variants:
    print(f"\nüîπ {name}")
    print(f"   –ó–∞–≥–æ–ª–æ–≤–∫–∏: {list(headers.keys())}")
    try:
        r = requests.get(url, headers=headers, params={"page[size]": 1}, timeout=3)
        print(f"   ‚úÖ HTTP {r.status_code}")
        if r.status_code == 200:
            print(f"   üéâ –†–ê–ë–û–¢–ê–ï–¢! –û—Ç–≤–µ—Ç: {r.text[:100]}")
        elif r.status_code in [401, 403]:
            print(f"   üîê –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {r.text[:200]}")
    except requests.Timeout:
        print(f"   ‚è∞ TIMEOUT")
    except Exception as e:
        print(f"   ‚ùå {type(e).__name__}")

# –í–ê–†–ò–ê–ù–¢ 3: –ü–æ–ø—Ä–æ–±—É–µ–º OPTIONS (—É–∑–Ω–∞—Ç—å, –∫–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã)
print("\n" + "=" * 80)
print("üìç –¢–ï–°–¢ 3: OPTIONS –ó–ê–ü–†–û–° (—É–∑–Ω–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã)")
print("=" * 80)

try:
    print(f"\nüîπ OPTIONS {url}")
    r = requests.options(url, headers={"X-Auth-Token": KASPI_TOKEN}, timeout=3)
    print(f"   ‚úÖ HTTP {r.status_code}")
    print(f"   üìã Allow: {r.headers.get('Allow', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}")
    print(f"   üìã Headers: {dict(r.headers)}")
except requests.Timeout:
    print(f"   ‚è∞ TIMEOUT")
except Exception as e:
    print(f"   ‚ùå {type(e).__name__}")

# –í–ê–†–ò–ê–ù–¢ 4: HEAD –∑–∞–ø—Ä–æ—Å (–ª–µ–≥–∫–æ–≤–µ—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
print("\n" + "=" * 80)
print("üìç –¢–ï–°–¢ 4: HEAD –ó–ê–ü–†–û–° (–ª–µ–≥–∫–æ–≤–µ—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)")
print("=" * 80)

try:
    print(f"\nüîπ HEAD {url}")
    r = requests.head(url, headers={"X-Auth-Token": KASPI_TOKEN}, timeout=3)
    print(f"   ‚úÖ HTTP {r.status_code}")
    print(f"   üìã Headers: {dict(r.headers)}")
except requests.Timeout:
    print(f"   ‚è∞ TIMEOUT")
except Exception as e:
    print(f"   ‚ùå {type(e).__name__}")

# –í–ê–†–ò–ê–ù–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ base64
print("\n" + "=" * 80)
print("üìç –¢–ï–°–¢ 5: –ê–ù–ê–õ–ò–ó –§–û–†–ú–ê–¢–ê –¢–û–ö–ï–ù–ê")
print("=" * 80)

print(f"\nüîπ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω:")
print(f"   –î–ª–∏–Ω–∞: {len(KASPI_TOKEN)} —Å–∏–º–≤–æ–ª–æ–≤")
print(f"   –§–æ—Ä–º–∞—Ç: Base64 (–∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ '=')")
print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ: {KASPI_TOKEN}")

# –ü–æ–ø—Ä–æ–±—É–µ–º –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å (–º–æ–∂–µ—Ç —Ç–æ–∫–µ–Ω –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º?)
try:
    decoded = base64.b64decode(KASPI_TOKEN)
    print(f"\nüîπ –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:")
    print(f"   –ë–∞–π—Ç: {len(decoded)} –±–∞–π—Ç")
    print(f"   Hex: {decoded.hex()}")
    print(f"   –ü—Ä–æ–±—É–µ–º —Å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º...")
    
    # –¢–µ—Å—Ç —Å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
    r = requests.get(
        "https://kaspi.kz/shop/api/v2/orders",
        headers={"X-Auth-Token": decoded.hex()},
        params={"page[size]": 1},
        timeout=3
    )
    print(f"   ‚úÖ HTTP {r.status_code}")
except requests.Timeout:
    print(f"   ‚è∞ TIMEOUT")
except Exception as e:
    print(f"   ‚ÑπÔ∏è –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ")

# –í–ê–†–ò–ê–ù–¢ 6: –ü–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ HTTPS (–º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç?)
print("\n" + "=" * 80)
print("üìç –¢–ï–°–¢ 6: HTTP vs HTTPS")
print("=" * 80)

for protocol in ["https", "http"]:
    print(f"\nüîπ {protocol.upper()}")
    try:
        test_url = f"{protocol}://kaspi.kz/shop/api/v2/orders"
        r = requests.get(
            test_url,
            headers={"X-Auth-Token": KASPI_TOKEN},
            params={"page[size]": 1},
            timeout=3,
            allow_redirects=False
        )
        print(f"   ‚úÖ HTTP {r.status_code}")
        if r.status_code in [301, 302, 307, 308]:
            print(f"   üîÑ –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞: {r.headers.get('Location')}")
    except requests.Timeout:
        print(f"   ‚è∞ TIMEOUT")
    except Exception as e:
        print(f"   ‚ùå {type(e).__name__}")

# –§–ò–ù–ê–õ–¨–ù–´–ï –í–´–í–û–î–´
print("\n" + "=" * 80)
print("üìä –ò–¢–û–ì–û–í–´–ï –í–´–í–û–î–´")
print("=" * 80)

print("""
‚ÑπÔ∏è –ï—Å–ª–∏ –í–°–ï —Ç–µ—Å—Ç—ã –¥–∞–ª–∏ TIMEOUT:
   ‚Üí API —Ñ–∏–∑–∏—á–µ—Å–∫–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç
   ‚Üí –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É
   ‚Üí –ò–ª–∏ –≤–∞—à IP-–∞–¥—Ä–µ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω

‚ÑπÔ∏è –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ 401/403:
   ‚Üí API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Ç–æ–∫–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π/–Ω–µ—Ç –ø—Ä–∞–≤
   ‚Üí –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –≤ –∫–∞–±–∏–Ω–µ—Ç–µ

‚ÑπÔ∏è –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ 200:
   ‚Üí üéâ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç!

‚ÑπÔ∏è –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ 404:
   ‚Üí Endpoint –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
   ‚Üí –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
""")

print("\nüí° –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì:")
print("   –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:")
print("   1. –°–æ–∑–¥–∞—Ç—å –ù–û–í–´–ô —Ç–æ–∫–µ–Ω –≤ –∫–∞–±–∏–Ω–µ—Ç–µ")
print("   2. –ù–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏: https://kaspi.kz/merchantcabinet/support")
print("   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å Premium –∞–∫–∫–∞—É–Ω—Ç (API –º–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å)")
print("=" * 80)
