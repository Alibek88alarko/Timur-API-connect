#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
"""
import requests
import json
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_al_style_api():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Al-Style API"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Al-Style API...")
    
    url = "https://api.al-style.kz/api/elements-pagination"
    token = os.getenv('AL_STYLE_TOKEN')
    
    headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
    }
    
    params = {
        'access-token': token,
        'limit': 5,
        'offset': 0
    }
    
    try:
        response = requests.get(url, headers=headers, params=params, timeout=10)
        print(f"‚úÖ Al-Style API: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            products = data.get('elements', [])
            print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except requests.exceptions.Timeout:
        print("‚è∞ Timeout –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Al-Style API")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_kaspi_api():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Kaspi API"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Kaspi API...")
    
    url = "https://kaspi.kz/shop/api/v2/orders"
    token = os.getenv('KASPI_TOKEN')
    
    headers = {
        'Content-Type': 'application/vnd.api+json',
        'X-Auth-Token': token
    }
    
    params = {
        'page[number]': 0,
        'page[size]': 5
    }
    
    try:
        response = requests.get(url, headers=headers, params=params, timeout=10)
        print(f"‚úÖ Kaspi API: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            orders = data.get('data', [])
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders)}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except requests.exceptions.Timeout:
        print("‚è∞ Timeout –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Kaspi API")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω—ã
    al_token = os.getenv('AL_STYLE_TOKEN')
    kaspi_token = os.getenv('KASPI_TOKEN')
    
    if not al_token:
        print("‚ùå AL_STYLE_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    if not kaspi_token:
        print("‚ùå KASPI_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"üîë Al-Style Token: {al_token[:10]}...")
    print(f"üîë Kaspi Token: {kaspi_token[:10]}...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    al_ok = test_al_style_api()
    kaspi_ok = test_kaspi_api()
    
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"Al-Style API: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if al_ok else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    print(f"Kaspi API: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if kaspi_ok else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    
    if al_ok and kaspi_ok:
        print("\nüéâ –û–±–∞ API —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\n‚ö†Ô∏è  –ù—É–∂–Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–∞ API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π")

if __name__ == "__main__":
    main()
