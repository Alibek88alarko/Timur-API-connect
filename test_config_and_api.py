#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
"""
import os
import sys
from dotenv import load_dotenv
import requests

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
print("=" * 60)
print("üîç –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ò API")
print("=" * 60)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É .env
env_path = os.path.join(os.path.dirname(__file__), '.env')
if os.path.exists(env_path):
    print(f"‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω: {env_path}")
    load_dotenv(env_path)
else:
    print(f"‚ùå –§–∞–π–ª .env –ù–ï –Ω–∞–π–¥–µ–Ω: {env_path}")
    sys.exit(1)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
print("\n" + "=" * 60)
print("üìã –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø")
print("=" * 60)

al_style_token = os.getenv('AL_STYLE_TOKEN')
kaspi_token = os.getenv('KASPI_TOKEN')
al_style_url = os.getenv('AL_STYLE_API_URL')
kaspi_url = os.getenv('KASPI_API_URL')
store_id = os.getenv('STORE_ID')
merchant_id = os.getenv('MERCHANT_ID')
company_name = os.getenv('COMPANY_NAME')

print(f"AL_STYLE_TOKEN: {'‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω' if al_style_token else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
if al_style_token:
    print(f"  –î–ª–∏–Ω–∞: {len(al_style_token)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  –ü–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤: {al_style_token[:10]}...")

print(f"\nKASPI_TOKEN: {'‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω' if kaspi_token else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
if kaspi_token:
    print(f"  –î–ª–∏–Ω–∞: {len(kaspi_token)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  –ü–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤: {kaspi_token[:10]}...")

print(f"\nAL_STYLE_API_URL: {al_style_url}")
print(f"KASPI_API_URL: {kaspi_url}")
print(f"STORE_ID: {store_id}")
print(f"MERCHANT_ID: {merchant_id}")
print(f"COMPANY_NAME: {company_name}")

# –¢–µ—Å—Ç–∏—Ä—É–µ–º Al-Style API
print("\n" + "=" * 60)
print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AL-STYLE API")
print("=" * 60)

try:
    al_style_test_url = f"{al_style_url}/elements-pagination"
    params = {
        'access-token': al_style_token,
        'limit': 5,
        'offset': 0
    }
    headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
    }
    
    print(f"üì° –ó–∞–ø—Ä–æ—Å –∫: {al_style_test_url}")
    response = requests.get(al_style_test_url, headers=headers, params=params, timeout=10)
    
    print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        data = response.json()
        products = data.get('elements', [])
        print(f"‚úÖ Al-Style API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
        if len(products) > 0:
            print(f"üìù –ü—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–∞: {products[0].get('name', 'N/A')}")
    else:
        print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {response.text[:200]}")
        
except requests.exceptions.Timeout:
    print("‚ùå Timeout –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Al-Style API")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

# –¢–µ—Å—Ç–∏—Ä—É–µ–º Kaspi API (–Ω–µ—Å–∫–æ–ª—å–∫–æ URL)
print("\n" + "=" * 60)
print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï KASPI API")
print("=" * 60)

kaspi_urls_to_test = [
    ("–û—Å–Ω–æ–≤–Ω–æ–π", os.getenv('KASPI_API_URL')),
    ("–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ 1", os.getenv('KASPI_API_URL_ALT1')),
    ("–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ 2", os.getenv('KASPI_API_URL_ALT2')),
]

kaspi_headers = {
    'Content-Type': 'application/vnd.api+json',
    'X-Auth-Token': kaspi_token
}

working_kaspi_url = None

for url_name, base_url in kaspi_urls_to_test:
    if not base_url:
        continue
        
    print(f"\nüîó –¢–µ—Å—Ç–∏—Ä—É—é {url_name}: {base_url}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ endpoints
    endpoints_to_test = [
        '/orders',
        '/products',
        '/merchants',
        ''  # –ë–∞–∑–æ–≤—ã–π URL
    ]
    
    for endpoint in endpoints_to_test:
        test_url = f"{base_url}{endpoint}"
        try:
            print(f"  üì° {test_url}... ", end='')
            response = requests.get(
                test_url,
                headers=kaspi_headers,
                timeout=5,
                params={'page[size]': 1}  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            )
            
            print(f"HTTP {response.status_code}")
            
            if response.status_code in [200, 201, 400, 401, 403]:
                # –î–∞–∂–µ –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - —ç—Ç–æ —Ö–æ—Ä–æ—à–∏–π –∑–Ω–∞–∫!
                if response.status_code == 200:
                    print(f"    ‚úÖ –†–ê–ë–û–¢–ê–ï–¢! –≠—Ç–æ—Ç URL –¥–æ—Å—Ç—É–ø–µ–Ω!")
                    working_kaspi_url = base_url
                    break
                elif response.status_code == 401:
                    print(f"    ‚ö†Ô∏è 401 Unauthorized - –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –∏–ª–∏ endpoint")
                elif response.status_code == 403:
                    print(f"    ‚ö†Ô∏è 403 Forbidden - –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
                elif response.status_code == 400:
                    print(f"    ‚ö†Ô∏è 400 Bad Request - –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞")
            else:
                print(f"    ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                
        except requests.exceptions.Timeout:
            print("‚è∞ Timeout")
        except requests.exceptions.ConnectionError:
            print("‚ùå Connection Error")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}")
    
    if working_kaspi_url:
        break

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
print("\n" + "=" * 60)
print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
print("=" * 60)

print("\n‚úÖ –†–ê–ë–û–¢–ê–ï–¢:")
if al_style_token and kaspi_token:
    print("  - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ (.env —Ñ–∞–π–ª)")
    print("  - –¢–æ–∫–µ–Ω—ã –Ω–∞–π–¥–µ–Ω—ã")

print("\n‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø:")
if not working_kaspi_url:
    print("  - Kaspi API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö URL")
    print("  - –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
    print("    1. –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω")
    print("    2. API –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ")
    print("    3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL endpoint")
    print("    4. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –ø–æ IP")
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ Kaspi.kz")
    print("  2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
    print("  3. –°–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Kaspi: 2323")

print("\n" + "=" * 60)
